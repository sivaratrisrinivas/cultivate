{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '' : 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Dashboard statistics\nexport const getDashboardStats = async () => {\n  try {\n    const response = await api.get('/api/dashboard/stats');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    throw error;\n  }\n};\n\n// Events\nexport const getEvents = async (filters = {}) => {\n  try {\n    const response = await api.get('/api/events', {\n      params: filters\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\nexport const getEvent = async eventId => {\n  try {\n    const response = await api.get(`/api/events/${eventId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event ${eventId}:`, error);\n    throw error;\n  }\n};\n\n// Event history for charts\nexport const getEventHistory = async () => {\n  try {\n    const response = await api.get('/api/events/history');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching event history:', error);\n    throw error;\n  }\n};\n\n// Settings\nexport const getSettings = async () => {\n  try {\n    const response = await api.get('/api/settings');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching settings:', error);\n    throw error;\n  }\n};\nexport const updateSettings = async settings => {\n  try {\n    const response = await api.post('/api/settings', settings);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating settings:', error);\n    throw error;\n  }\n};\n\n// System status\nexport const getSystemStatus = async () => {\n  try {\n    const response = await api.get('/api/status');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching system status:', error);\n    throw error;\n  }\n};\nexport default {\n  getDashboardStats,\n  getEvents,\n  getEvent,\n  getEventHistory,\n  getSettings,\n  updateSettings,\n  getSystemStatus\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","NODE_ENV","headers","getDashboardStats","response","get","data","error","console","getEvents","filters","params","getEvent","eventId","getEventHistory","getSettings","updateSettings","settings","post","getSystemStatus"],"sources":["/home/srinivas/workspace/github.com/sivaratrisrinivas/hackathons/cultivate/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '' : 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Dashboard statistics\nexport const getDashboardStats = async () => {\n  try {\n    const response = await api.get('/api/dashboard/stats');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    throw error;\n  }\n};\n\n// Events\nexport const getEvents = async (filters = {}) => {\n  try {\n    const response = await api.get('/api/events', { params: filters });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\nexport const getEvent = async (eventId) => {\n  try {\n    const response = await api.get(`/api/events/${eventId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event ${eventId}:`, error);\n    throw error;\n  }\n};\n\n// Event history for charts\nexport const getEventHistory = async () => {\n  try {\n    const response = await api.get('/api/events/history');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching event history:', error);\n    throw error;\n  }\n};\n\n// Settings\nexport const getSettings = async () => {\n  try {\n    const response = await api.get('/api/settings');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching settings:', error);\n    throw error;\n  }\n};\n\nexport const updateSettings = async (settings) => {\n  try {\n    const response = await api.post('/api/settings', settings);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating settings:', error);\n    throw error;\n  }\n};\n\n// System status\nexport const getSystemStatus = async () => {\n  try {\n    const response = await api.get('/api/status');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching system status:', error);\n    throw error;\n  }\n};\n\nexport default {\n  getDashboardStats,\n  getEvents,\n  getEvent,\n  getEventHistory,\n  getSettings,\n  updateSettings,\n  getSystemStatus,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}